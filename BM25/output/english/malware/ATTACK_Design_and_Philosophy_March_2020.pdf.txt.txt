  12 
3.5 
Groups ............................................................................................................................ 13 
3.5.1 
Group Object Structure ............................................................................................. 14 
3.6 
Software .......................................................................................................................... 14 
3.6.1 
Software Object Structure ........................................................................................ Behavioral Analytics Development – By going beyond traditional indicators of compromise 
(IoCs) or signatures of malicious activity, behavioral detection analytics can be used to identify 
potentially malicious activity within a system or network that may not rely on prior knowledge 
of adversary tools and indicators. ATT&CK is just as much about the mindset and process of using it as much as it is the 
knowledge base itself. For example, Pre-OS Boot has three sub-
techniques consisting of Bootkit, Component Firmware, and System Firmware to describe how 
persistence is achieved before an operating system boots. There could be 
many ways of detecting a (sub-)technique but 
ATT&CK and MITRE do not endorse any particular 
vendor solution. The relationship describes the 
details of how a specific mitigation can be applied to 
the (sub-)technique. Mitigation recommendations 
remain vendor agnostic, recommending the general 
method or capability class rather than a specific tool. Mitigation may not always be possible for a given 
(sub-)technique and is documented as such if no 
relationships to a given (sub-)technique are present. the Process Hollowing sub-technique can 
be used for Defense Evasion but not Privilege Escalation even though the Process Injection 
technique covers both tactics). Software 
Relationship 
/ Field 
List of software that the group has been reported to 
use with a field to describe details on how the 
software is used. 3.6 Software 
Adversaries commonly use different types of software during intrusions. Software is broken out into two high-level 
categories: tools and malware. • Malware - Commercial, custom closed source, or open source software intended to be 
used for malicious purposes by adversaries. Associated Software 
Tag 
Names that have overlapping reference to a software 
entry and may refer to the same or similar software 
in threat intelligence reporting. Type* 
Tag 
Type of software: malware or tool. 3.9.1.3 
Software 
Major version changes consist of changes or additions to associated software as well as changes 
to the software’s description, which should happen infrequently. Defenders in this context refer to threat hunters, malware analysts, and incident 
responders. Similarly, malware databases also exist but typically lack context around how the malware is 
used and by whom. They also do not take into account how legitimate software can be used for 
malicious purposes. With the rise of 
targeted ransomware, disk wiper incidents, manipulation of financial transactions, and large scale 
distributed denial of service attacks, it was important for ATT&CK to maintain parity with the 
behavior that adversaries are using even if their goals are not focused on exfiltration of data. How many different ways can it be performed with existing 
adversary malware and other tools? • It applies to Windows and Linux systems and represents benign functionality used by 
legitimate software that can be used by adversaries for malicious purposes. • There are several variations of process injection, but most follow a common sequence of 
an initial adversary controlled process requesting access to a non-malicious process, 
loading code within it, and forcing that process to execute the new code. • Other related methods use different functionality provided by Windows to load and 
execute code, such as application shims. Conclusions: 
• The core feature of this technique is loading malicious code within an existing live 
process. • There are several variations within this core concept to include in the process injection 
entry which should be defined as sub-techniques under a process injection parent 
technique. The resulting code execution can be used for a 
number of purposes, including adding or modifying information, gaining access to a system, 
causing the server to download and execute other code which may result in persistence, 
credential access, privilege escalation, collection, and exfiltration. Database input or web logs can be used to look for common 
SQLi inputs that result in code execution. [17] The MITRE Corporation, "Process Injection," 18 July 2019. [Accessed 16 March 2020].